Basic syntax 

P01 - Student Information - This task is about receiving information  for a student -> 3 lines of input – student name, age, and average grade, as an input and to print all the info about the student in the following format: "Name: {student name}, Age: {student age}, Grade: {student grade}". , 
examples input: John
    		15
    		5.40

P02 - Passed - a program that takes as an input a grade and prints "Passed!" if the grade is equal or more than 3.00.
	Input - The input comes as a single floating-point number.
	Output - The output is either "Passed!" if the grade is equal or more than 3.00, otherwise, you should print nothing.

P04 - Back in 30 Minutes - this task is about writing a program that prints the time after 30 minutes in the format "hh:mm". The hours have one or two numbers, and the minutes always have two numbers (with leading zero).
Constraints
· The hours will be between 0 and 23.
· The minutes will be between 0 and 59.

P05 - Month Printer- a program that takes an integer from the console and prints the corresponding month. If the number is more than 12 or less than 1 print "Error!".

P06 - Foreign Languages - a program that prints the language that a given country speaks. You can receive only the following combinations: English is spoken in England and USA; Spanish is spoken in Spain, Argentina, and Mexico; for the others, print "unknown".

P07 -Theatre Promotions - A theatre is having a ticket sale, but they need a program to calculate the price of a single ticket. If the given age does not fit one of the categories, you should print "Error!". You can see the prices in the table below:

Day / Age | 0 <= age <= 18 |18 < age <= 64 | 64 < age <= 122
Weekday   |     12$        |   18$         |     12$
Weekend   |     15$        |   20$         |     15$
Holiday   |     5$         |   12$         |     10$


P08 - Divisible by 3 -  Write a program that prints all the numbers from 1 to 100, which are divisible by 3. You have to use a single for loop. The program should not receive input.

P09 -Sum of Odd Numbers -Write a program that prints the next n odd numbers (starting from 1) and on the last row prints the sum of them.

P10 - Multiplication Table - You will receive an integer as input from the console. Print the 10 times table for this integer.

P11 - Multiplication Table 2.0 - Rewrite your program so it can receive the multiplier from the console. Print the table from the given multiplier to 10. If the given multiplier is more than 10 - print only one row with the integer, the given multiplier, and the product.

P12 -Even Number -Take as an input an even number and print its absolute value with a message: "The number is: {absoluteValue}". If the number is odd, print "Please write an even number." and continue reading numbers.

P13 - Refactor Sum of Odd Numbers - You are assigned to find and fix the bugs in an existing piece of code, using the debugger. You should trace the program execution to find the lines of code that produce incorrect or unexpected results.
You are given a program (existing source code) that prints the next n odd numbers (starting from 1) and on the last row, prints the sum of them.